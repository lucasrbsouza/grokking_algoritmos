üìú Pseudoc√≥digo do Algoritmo de Dijkstra

Entrada:
- grafo com pesos positivos
- v√©rtice inicial (in√≠cio)

Inicialize:
- custo[v√©rtice] = infinito, para todos os v√©rtices
- custo[in√≠cio] = 0
- predecessores[v√©rtice] = indefinido
- conjunto de v√©rtices n√£o processados

Enquanto existirem v√©rtices n√£o processados:
    - escolha o v√©rtice atual com o menor custo

    Para cada vizinho do v√©rtice atual:
        - novo_custo = custo[atual] + peso(aresta atual ‚Üí vizinho)
        - se novo_custo < custo[vizinho]:
            - custo[vizinho] = novo_custo
            - predecessores[vizinho] = atual

    - marque o v√©rtice atual como processado (remova do conjunto)

Sa√≠da:
- custos m√≠nimos a partir do v√©rtice inicial
- caminho m√≠nimo (reconstru√≠do usando o vetor de predecessores)


Explica√ß√£o r√°pida

custo: guarda o menor custo conhecido para chegar a cada v√©rtice.
predecessores: armazena por qual v√©rtice passamos para chegar at√© aquele.
O algoritmo sempre escolhe o v√©rtice com menor custo atual para explorar primeiro.
Ele vai "melhorando" os caminhos √† medida que encontra rotas mais baratas.
